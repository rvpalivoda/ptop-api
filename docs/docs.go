// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/assets": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reference"
                ],
                "summary": "Список активных активов",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Asset"
                            }
                        }
                    }
                }
            }
        },
        "/auth/2fa/enable": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Включение двухфакторной аутентификации",
                "parameters": [
                    {
                        "description": "подтверждение пароля",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.Enable2FARequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.Enable2FAResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Аутентифицирует клиента и выдаёт пару токенов. При включённой 2FA требуется код.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Вход клиента",
                "parameters": [
                    {
                        "description": "учётные данные",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/password": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Смена пароля",
                "parameters": [
                    {
                        "description": "пароли",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.ChangePasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/pincode": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Установка PIN-кода",
                "parameters": [
                    {
                        "description": "пин-код",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.SetPinCodeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/profile": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Профиль клиента",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ProfileResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/recover/{username}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Запрос позиций для восстановления",
                "parameters": [
                    {
                        "type": "string",
                        "description": "имя пользователя",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.RecoverChallengeResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Обновление access токена",
                "parameters": [
                    {
                        "description": "refresh токен",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.RefreshRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Создаёт нового клиента с уникальным именем, хешем пароля и мнемонической фразой",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Регистрация клиента",
                "parameters": [
                    {
                        "description": "данные регистрации",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.RegisterResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/username": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Смена имени пользователя",
                "parameters": [
                    {
                        "description": "новое имя",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.ChangeUsernameRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/client/balances": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "balances"
                ],
                "summary": "Список балансов клиента",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Balance"
                            }
                        }
                    }
                }
            }
        },
        "/client/escrows": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "escrows"
                ],
                "summary": "Список эскроу клиента",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Escrow"
                            }
                        }
                    }
                }
            }
        },
        "/client/offers": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "offers"
                ],
                "summary": "Список объявлений клиента",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "фильтр по активным",
                        "name": "enabled",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Offer"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "offers"
                ],
                "summary": "Создать объявление",
                "parameters": [
                    {
                        "description": "данные",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.OfferRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Offer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/client/offers/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "offers"
                ],
                "summary": "Изменить объявление",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "данные",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.OfferRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Offer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/client/offers/{id}/disable": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "offers"
                ],
                "summary": "Отключить объявление",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Offer"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/client/offers/{id}/enable": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "offers"
                ],
                "summary": "Включить объявление",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Offer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/client/orders": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Список ордеров клиента",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Order"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Создать ордер",
                "parameters": [
                    {
                        "description": "данные",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.OrderRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Order"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/client/payment-methods": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "client-payment-methods"
                ],
                "summary": "Список платёжных методов клиента",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ClientPaymentMethod"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "client-payment-methods"
                ],
                "summary": "Создать платёжный метод клиента",
                "parameters": [
                    {
                        "description": "данные",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateClientPaymentMethodRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ClientPaymentMethod"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/client/payment-methods/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "client-payment-methods"
                ],
                "summary": "Удалить платёжный метод клиента",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/client/wallets": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallets"
                ],
                "summary": "Список кошельков клиента",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Wallet"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "При DEBUG_FAKE_NETWORK=true адрес генерируется без обращения к сети в формате fake:{asset}:{client}:{index}",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallets"
                ],
                "summary": "Создать кошелёк",
                "parameters": [
                    {
                        "description": "данные",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.WalletRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Wallet"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/countries": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reference"
                ],
                "summary": "Список стран",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Country"
                            }
                        }
                    }
                }
            }
        },
        "/debug/deposit": {
            "post": {
                "description": "Создаёт фейковый депозит на указанный кошелёк",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "debug"
                ],
                "summary": "Тестовый депозит",
                "parameters": [
                    {
                        "description": "Запрос",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.DebugDepositRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Проверка состояния сервиса",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.StatusResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/offers": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "offers"
                ],
                "summary": "Список активных объявлений",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID актива от",
                        "name": "from_asset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ID актива к",
                        "name": "to_asset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Offer"
                            }
                        }
                    }
                }
            }
        },
        "/payment-methods": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reference"
                ],
                "summary": "Список платёжных методов",
                "responses": {
                    "200": {
                        "description": "Расширенная структура платёжных методов",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.PaymentMethod"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.ChangePasswordRequest": {
            "type": "object",
            "properties": {
                "confirm_password": {
                    "type": "string"
                },
                "new_password": {
                    "type": "string"
                },
                "old_password": {
                    "type": "string"
                }
            }
        },
        "handlers.ChangeUsernameRequest": {
            "type": "object",
            "properties": {
                "new_username": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "handlers.CreateClientPaymentMethodRequest": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "country_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "payment_method_id": {
                    "type": "string"
                },
                "post_code": {
                    "type": "string"
                }
            }
        },
        "handlers.DebugDepositRequest": {
            "type": "object",
            "required": [
                "amount",
                "wallet_id"
            ],
            "properties": {
                "amount": {
                    "type": "string"
                },
                "wallet_id": {
                    "type": "string"
                }
            }
        },
        "handlers.Enable2FARequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                }
            }
        },
        "handlers.Enable2FAResponse": {
            "type": "object",
            "properties": {
                "secret": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "handlers.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "handlers.LoginRequest": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "handlers.MnemonicWord": {
            "type": "object",
            "properties": {
                "position": {
                    "type": "integer"
                },
                "word": {
                    "type": "string"
                }
            }
        },
        "handlers.OfferRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "client_payment_method_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "conditions": {
                    "type": "string"
                },
                "from_asset_id": {
                    "type": "string"
                },
                "max_amount": {
                    "type": "string"
                },
                "min_amount": {
                    "type": "string"
                },
                "order_expiration_timeout": {
                    "type": "integer"
                },
                "price": {
                    "type": "string"
                },
                "to_asset_id": {
                    "type": "string"
                }
            }
        },
        "handlers.OrderRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "client_payment_method_id": {
                    "type": "string"
                },
                "offer_id": {
                    "type": "string"
                }
            }
        },
        "handlers.ProfileResponse": {
            "type": "object",
            "properties": {
                "pincode_set": {
                    "type": "boolean"
                },
                "twofa_enabled": {
                    "type": "boolean"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "handlers.RecoverChallengeResponse": {
            "type": "object",
            "properties": {
                "positions": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "handlers.RefreshRequest": {
            "type": "object",
            "properties": {
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "handlers.RegisterRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "password_confirm": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "handlers.RegisterResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "mnemonic": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.MnemonicWord"
                    }
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "handlers.SetPinCodeRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "pincode": {
                    "type": "string"
                }
            }
        },
        "handlers.StatusResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "handlers.TokenResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "handlers.WalletRequest": {
            "type": "object",
            "properties": {
                "asset_id": {
                    "type": "string"
                }
            }
        },
        "models.Asset": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "isConvertible": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "models.Balance": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "amountEscrow": {
                    "type": "number"
                },
                "assetID": {
                    "type": "string"
                },
                "clientID": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.ClientPaymentMethod": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "clientID": {
                    "type": "string"
                },
                "countryID": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "paymentMethodID": {
                    "type": "string"
                },
                "postCode": {
                    "type": "string"
                }
            }
        },
        "models.Country": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.Escrow": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "assetID": {
                    "type": "string"
                },
                "clientID": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "offerID": {
                    "type": "string"
                },
                "orderID": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.Offer": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "clientID": {
                    "type": "string"
                },
                "conditions": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "disabledAt": {
                    "type": "string"
                },
                "enabledAt": {
                    "type": "string"
                },
                "fromAssetID": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isEnabled": {
                    "type": "boolean"
                },
                "maxAmount": {
                    "type": "number"
                },
                "minAmount": {
                    "type": "number"
                },
                "orderExpirationTimeout": {
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                },
                "toAssetID": {
                    "type": "string"
                },
                "ttl": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.Order": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "buyerID": {
                    "type": "string"
                },
                "clientPaymentMethodID": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "expiresAt": {
                    "type": "string"
                },
                "fromAssetID": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isEscrow": {
                    "type": "boolean"
                },
                "offerID": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "releasedAt": {
                    "type": "string"
                },
                "sellerID": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/models.OrderStatus"
                },
                "toAssetID": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.OrderStatus": {
            "type": "string",
            "enum": [
                "WAIT_PAYMENT",
                "PAID",
                "RELEASED",
                "CANCELLED",
                "DISPUTE"
            ],
            "x-enum-varnames": [
                "OrderStatusWaitPayment",
                "OrderStatusPaid",
                "OrderStatusReleased",
                "OrderStatusCancelled",
                "OrderStatusDispute"
            ]
        },
        "models.PaymentMethod": {
            "type": "object",
            "properties": {
                "chargebackWindowHours": {
                    "type": "integer"
                },
                "feeSide": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isRealtime": {
                    "type": "boolean"
                },
                "isReversible": {
                    "type": "boolean"
                },
                "kycLevelHint": {
                    "type": "string"
                },
                "methodGroup": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "countries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Country"
                    }
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "settlementMinutes": {
                    "type": "integer"
                },
                "typicalFiatCCY": {
                    "type": "string"
                }
            }
        },
        "models.Wallet": {
            "type": "object",
            "properties": {
                "assetID": {
                    "type": "string"
                },
                "clientID": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "disabledAt": {
                    "type": "string"
                },
                "enabledAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "index": {
                    "type": "integer"
                },
                "isEnabled": {
                    "type": "boolean"
                },
                "value": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "PTOP API",
	Description:      "API сервиса PTOP",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
